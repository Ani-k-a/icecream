{"mappings":"YAAO,ICOHA,EDPSC,EAAQ,CACjBC,MAAO,CACH,CACIC,IAAK,wCACLC,KAAM,QACNC,YAAa,iKACbC,QAAS,sBAEb,CACIH,IAAK,wCACLC,KAAM,QACNC,YAAa,gHACbC,QAAS,mBAEb,CACIH,IAAK,wCACLC,KAAM,QACNC,YAAa,mJACbC,QAAS,mBAKjBC,QAAS,GCrBPC,EAAM,CACRC,OAAQC,SAASC,cAAc,YA8D7BC,EAAY,WACVX,EAAMM,QAAU,IAChBN,EAAMM,QAAU,EAChBM,I,EAIFC,EAAa,WACXb,EAAMM,QAAUN,EAAMC,MAAMa,OAAS,IACrCd,EAAMM,SAAW,EACjBS,QAAQC,IAAKhB,EAAMM,SACnBM,I,EAIFK,EAAc,WAChBC,aAAanB,GACbC,EAAMM,QAAUa,KAAKC,OAAOpB,EAAMC,MAAMa,OAAS,GAAK,GACtDF,G,EAGES,EAAS,WACXd,EAAIC,OAAOc,kBACXf,EAAIC,OAAOe,OA/EQ,SAACC,GACpB,IAAMC,EAAazB,EAAMC,MAAMuB,GACvBtB,EAAoCuB,EAApCvB,IAAKC,EAA+BsB,EAA/BtB,KAAMC,EAAyBqB,EAAzBrB,YAAaC,EAAYoB,EAAZpB,QAE1BqB,EAAcjB,SAASkB,cAAc,OAC3CD,EAAYE,UAAUC,IAAI,iBAE1B,IAAMC,EAAmBrB,SAASkB,cAAc,OAChDG,EAAiBF,UAAUC,IAAI,uBAC/B,IAAME,EAAQtB,SAASkB,cAAc,OACrCI,EAAMC,aAAa,MAAO9B,GAC1B6B,EAAMH,UAAUC,IAAI,eACpBE,EAAMC,aAAa,MAAO7B,GAC1B,IAAM8B,EAAUxB,SAASkB,cAAc,KACvCM,EAAQL,UAAUC,IAAI,gBACtBI,EAAQC,UAAY9B,EACpB,IAAM+B,EAAY1B,SAASkB,cAAc,WACzCQ,EAAUD,UAAY7B,EACtB8B,EAAUP,UAAUC,IAAI,mBAExBC,EAAiBP,OAAOQ,EAAOE,EAASE,GAExC,IAAMC,EAAW3B,SAASkB,cAAc,OACxCS,EAASR,UAAUC,IAAI,gBACvB,IAAMQ,EAAU5B,SAASkB,cAAc,UACvCU,EAAQL,aAAa,QAAS,mBAC9B,IAAMM,EAAY7B,SAASkB,cAAc,UACzCW,EAAUN,aAAa,QAAS,qBAChC,IAAMO,EAAW9B,SAASkB,cAAc,UAyBxC,OAxBAY,EAASP,aAAa,QAAS,oBAC/BI,EAASb,OAAOc,EAASC,EAAWC,GAEpCb,EAAYH,OAAOO,EAAkBM,GAEf,IAAlBpC,EAAMM,SACN+B,EAAQT,UAAUC,IAAI,cACtBU,EAASX,UAAUY,OAAO,cAC1BF,EAAUV,UAAUY,OAAO,eAEpBxC,EAAMM,UAAYN,EAAMC,MAAMa,OAAS,GAC9CyB,EAASX,UAAUC,IAAI,cACvBS,EAAUV,UAAUY,OAAO,cAC3BH,EAAQT,UAAUY,OAAO,gBAEzBF,EAAUV,UAAUC,IAAI,cACxBQ,EAAQT,UAAUY,OAAO,cACzBD,EAASX,UAAUY,OAAO,eAG9BH,EAAQI,iBAAiB,QAAS9B,GAClC4B,EAASE,iBAAiB,QAAS5B,GACnCyB,EAAUG,iBAAiB,QAASxB,GAE7BS,C,CA0BWgB,CAAe1C,EAAMM,S,EAGrCM,EAAoB,WACtB+B,cAAc5C,GACdsB,IACArB,EAAMM,SAAW,EACjBP,EAAU6C,aAAY,WACd5C,EAAMM,UAAYN,EAAMC,MAAMa,QAC9Bd,EAAMM,QAAU,EAChBqC,cAAc5C,GACda,MAEAS,IACArB,EAAMM,SAAW,E,GAEtB,I,EAGPM,G","sources":["src/js/customer-revievs-state.js","src/js/customer-revievs.js"],"sourcesContent":["export const state = {\n    dates: [\n        {\n            img: \"https://i.ibb.co/tpxdXHz/user1-X1.jpg\",\n            name: \"Emily\",\n            description: \"I love visiting your cafe. You prepare the most delicious ice cream in Los Angeles! In addition, you have beautiful serving, cozy atmosphere and polite staff.\",\n            address: \"Emily, Los Angeles\"\n        },\n        {\n            img: \"https://i.ibb.co/1MsSHLy/user2-X1.jpg\",\n            name: \"Bryan\",\n            description: \"Every day we come to you with friends after classes in college. We love your ice cream and casual atmosphere!\",\n            address: \"Bryan, New-York\"\n        },\n        {\n            img: \"https://i.ibb.co/zRWFW9Y/user3-X1.jpg\",\n            name: \"Diana\",\n            description: \"Ice cream is my passion! I love your chocolate hazelnut ice cream! And I really like the excellent service - always served politely and quickly!\",\n            address: \"Diana, Chicago\"\n        }\n\n    ],\n\n    current: 0,\n\n};","import { state } from './customer-revievs-state';\n\nconst ref = {\n    slider: document.querySelector(\".slider\")\n\n};\n\nlet timerId;\n\nconst createCardItem = (i) => {\n    const objectInfo = state.dates[i]\n    const { img, name, description, address } = objectInfo;\n\n    const sliderBlock = document.createElement('div');\n    sliderBlock.classList.add('slider__block');\n\n    const sliderDescrBlock = document.createElement('div');\n    sliderDescrBlock.classList.add('slider__description');\n    const imgEl = document.createElement('img');\n    imgEl.setAttribute('src', img);\n    imgEl.classList.add('slider__img');\n    imgEl.setAttribute('alt', name);\n    const descrEl = document.createElement('p');\n    descrEl.classList.add('slider__info');\n    descrEl.innerText = description;\n    const addressEl = document.createElement('address');\n    addressEl.innerText = address;\n    addressEl.classList.add('slider__address');\n\n    sliderDescrBlock.append(imgEl, descrEl, addressEl);\n\n    const btnBlock = document.createElement('div');\n    btnBlock.classList.add('slider__btns')\n    const btnLeft = document.createElement('button');\n    btnLeft.setAttribute('class', 'slider-btn left');\n    const btnCenter = document.createElement('button');\n    btnCenter.setAttribute('class', 'slider-btn center');\n    const btnRight = document.createElement('button');\n    btnRight.setAttribute('class', 'slider-btn right');\n    btnBlock.append(btnLeft, btnCenter, btnRight);\n\n    sliderBlock.append(sliderDescrBlock, btnBlock);\n\n    if (state.current === 0) {\n        btnLeft.classList.add('active-btn');\n        btnRight.classList.remove('active-btn');\n        btnCenter.classList.remove('active-btn');\n\n    } else if (state.current === state.dates.length - 1) {\n        btnRight.classList.add('active-btn');\n        btnCenter.classList.remove('active-btn');\n        btnLeft.classList.remove('active-btn');\n    } else {\n        btnCenter.classList.add('active-btn');\n        btnLeft.classList.remove('active-btn');\n        btnRight.classList.remove('active-btn');\n    };\n\n    btnLeft.addEventListener('click', onLeftBtn);\n    btnRight.addEventListener('click', onRightBtn);\n    btnCenter.addEventListener('click', onMiddleBtn);\n\n    return sliderBlock;\n}\n\nconst onLeftBtn = () => {\n    if (state.current > 0) {\n        state.current = 0;\n        startRenderSlider();\n    }\n\n}\nconst onRightBtn = () => {\n    if (state.current < state.dates.length - 2) {\n        state.current += 1;\n        console.log((state.current));\n        startRenderSlider()\n    }\n\n}\nconst onMiddleBtn = () => {\n    clearTimeout(timerId);\n    state.current = Math.floor((state.dates.length - 1) / 2);\n    startRenderSlider();\n}\n\nconst render = () => {\n    ref.slider.replaceChildren();\n    ref.slider.append(createCardItem(state.current));\n}\n\nconst startRenderSlider = () => {\n    clearInterval(timerId);\n    render();\n    state.current += 1;\n    timerId = setInterval(() => {\n        if (state.current === state.dates.length) {\n            state.current = 0;\n            clearInterval(timerId);\n            startRenderSlider();\n        } else {\n            render();\n            state.current += 1;\n        }\n    }, 8000)\n}\n\nstartRenderSlider();\n"],"names":["$97910953c17c5d4b$var$timerId","$0dfd1e57c889ecb9$export$ca000e230c0caa3e","dates","img","name","description","address","current","$97910953c17c5d4b$var$ref","slider","document","querySelector","$97910953c17c5d4b$var$onLeftBtn","$97910953c17c5d4b$var$startRenderSlider","$97910953c17c5d4b$var$onRightBtn","length","console","log","$97910953c17c5d4b$var$onMiddleBtn","clearTimeout","Math","floor","$97910953c17c5d4b$var$render","replaceChildren","append","i","objectInfo","sliderBlock","createElement","classList","add","sliderDescrBlock","imgEl","setAttribute","descrEl","innerText","addressEl","btnBlock","btnLeft","btnCenter","btnRight","remove","addEventListener","$97910953c17c5d4b$var$createCardItem","clearInterval","setInterval"],"version":3,"file":"index.2c448832.js.map"}